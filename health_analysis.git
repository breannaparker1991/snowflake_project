USE ROLE ACCOUNTADMIN;

USE WAREHOUSE COMPUTE_WH;

CREATE OR REPLACE DATABASE HEALTH_DB;

USE DATABASE HEALTH_DB;

USE SCHEMA HEALTH_DB.PUBLIC;

CREATE OR REPLACE STORAGE INTEGRATION HEALTH_INT
  TYPE = EXTERNAL_STAGE
  STORAGE_PROVIDER = 'S3'
  ENABLED = TRUE
  STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::329599639900:role/health_analysis_role'
  STORAGE_ALLOWED_LOCATIONS = ('s3://health-analysis/data/');

DESC INTEGRATION HEALTH_INT;

CREATE OR REPLACE STAGE HEALTH_DB.PUBLIC.HEALTH_STAGE
STORAGE_INTEGRATION = HEALTH_INT
URL= 's3://health-analysis/data/';

ls @HEALTH_DB.PUBLIC.HEALTH_STAGE;

CREATE OR REPLACE TABLE HEALTH_DB.PUBLIC.COUNTRY_DETAILS
(
COUNTRY_ID INT NOT NULL,
COUNTRY_NAME STRING, 
STATE STRING,
CITY STRING,
ZIPCODE STRING
);

CREATE OR REPLACE TABLE HEALTH_DB.PUBLIC.HOSPITAL_DETAILS
(
HOSPITAL_ID INT,
COUNTRY_ID INT,
HOSPITAL_NAME STRING,
CITY STRING,
LOCATION STRING
);

CREATE OR REPLACE TABLE HEALTH_DB.PUBLIC.MEASURE_DETAILS
(
MEASURE_ID STRING,
MEASURE_STATE_DATE DATE,
MEASURE_END_DATE DATE
);

CREATE OR REPLACE TABLE HEALTH_DB.PUBLIC.SURVEY_DETAILS
(
SURVEY_ID INT,
SURVEY_QUESTIONS STRING,
SURVEY_ANSWER STRING,
PATIENT_SURVEY_STAR_RATING_FOOTNOTE STRING
);

CREATE OR REPLACE TABLE HEALTH_DB.PUBLIC.FACT_TABLE
(
COUNTRY_ID INT,
HOSPITAL_ID INT,
SURVEY_ID INT,
MEASURE_ID STRING, 
NUMBER_OF_COMPLETED_SURVEYS STRING,
NUMBER_OF_COMPLETED_SURVEYS_FOOTNOTE STRING,
SURVEY_RESPONSE_RATE_PERCENT INT,
SURVEY_RESPONSE_RATE_PERCENT_FOOTNOTE STRING,
LINEAR_MEAN_VALUE INT,
ANSWER_PERCENT STRING,
PATIENT_SURVEY_STAR_RATING STRING
);

CREATE OR REPLACE TABLE HEALTH_DB.PUBLIC.ALL_TABLES
(
PROVIDER_ID STRING,
HOSPITAL_NAME STRING,
ADDRESS STRING,
CITY STRING,
STATE STRING,
ZIP_CODE STRING,
COUNTRY_NAME STRING,
PHONE_NUMBER STRING,
MEASURE_ID STRING,
QUESTION STRING,
ANSWER_DESCRIPTION STRING,
PATIENT_SURVEY_STAR_RATING STRING,
PATIENT_SURVEY_STAR_RATING_FOOTNOTE STRING,
ANSWER_PERCENT STRING,
ANSWER_PERCENT_FOOTNOTE STRING,
LINEAR_MEAN_VALUE STRING,
NUMBER_OF_COMPLETED_SURVEYS STRING,
NUMBER_OF_COMPLETED_SURVEYS_FOOTNOTE STRING,
SURVEY_RESPONSE_RATE_PERCENT STRING,
SURVEY_RESPONSE_RATE_PERCENT_FOOTNOTE STRING,
MEASURE_STATE_DATE STRING,
MEASURE_END_DATE STRING,
LOCATION STRING
);


CREATE OR REPLACE PIPE HEALTH_DB.PUBLIC.HEALTH_PIPE 
AUTO_INGEST = TRUE AS
COPY INTO HEALTH_DB.PUBLIC.ALL_TABLES
FROM 
(
SELECT
$1 AS PROVIDER_ID,
$2 AS HOSPITAL_NAME,
$3 AS ADDRESS,
$4 AS CITY,
$5 AS STATE,
$6 AS ZIP_CODE,
$7 AS COUNTRY_NAME,
$8 AS PHONE_NUMBER,
$9 AS MEASURE_ID,
$10 AS QUESTION,
$11 AS ANSWER_DESCRIPTION,
$12 AS PATIENT_SURVEY_STAR_RATING,
$13 AS PATIENT_SURVEY_STAR_RATING_FOOTNOTE,
$14 AS ANSWER_PERCENT,
$15 AS ANSWER_PERCENT_FOOTNOTE,
$16 AS LINEAR_MEAN_VALUE,
$17 AS NUMBER_OF_COMPLETED_SURVEYS,
$18 AS NUMBER_OF_COMPLETED_SURVEYS_FOOTNOTE,
$19 AS SURVEY_RESPONSE_RATE_PERCENT,
$20 AS SURVEY_RESPONSE_RATE_PERCENT_FOOTNOTE,
$21 AS MEASURE_STATE_DATE,
$22 AS MEASURE_END_DATE,
$23 AS LOCATION
FROM @HEALTH_DB.PUBLIC.HEALTH_STAGE)
FILE_FORMAT = (TYPE = 'CSV' SKIP_HEADER=1 FIELD_OPTIONALLY_ENCLOSED_BY ='"');


SELECT SYSTEM$PIPE_STATUS('HEALTH_DB.PUBLIC.HEALTH_PIPE');

SELECT * FROM ALL_TABLES;

SHOW PIPES;


CREATE OR REPLACE PROCEDURE HEALTH_DB.PUBLIC.CUSTOMER_SP()
RETURNS VARCHAR(50)
LANGUAGE JAVASCRIPT
EXECUTE AS CALLER
AS
$$
try {
//Create statement BEGIN, Begins a transaction in the current session
snowflake.execute({sqlText:`BEGIN TRANSACTION;`});
//load data from Customer Stream to a temp table

snowflake.execute({sqlText:` 

INSERT INTO HEALTH_DB.PUBLIC.COUNTRY_DETAILS
SELECT
ROW_NUMBER() OVER (PARTITION BY COUNTRY_NAME ORDER BY PROVIDER_ID) AS COUNTRY_ID, 
COUNTRY_NAME, 
STATE,
CITY,
ZIP_CODE
FROM 
HEALTH_DB.PUBLIC.ALL_TABLES;`});


snowflake.execute({sqlText:`
INSERT INTO HEALTH_DB.PUBLIC.HOSPITAL_DETAILS
SELECT
ROW_NUMBER() OVER (PARTITION BY HOSPITAL_NAME ORDER BY PROVIDER_ID) AS HOSPITALID,
ROW_NUMBER() OVER (PARTITION BY COUNTRY_NAME ORDER BY PROVIDER_ID) AS COUNTRYID,
HOSPITAL_NAME,
CITY,
LOCATION
FROM 
HEALTH_DB.PUBLIC.ALL_TABLES;`});

snowflake.execute({sqlText:`
INSERT INTO HEALTH_DB.PUBLIC.MEASURE_DETAILS
SELECT
MEASURE_ID,
MEASURE_STATE_DATE,
MEASURE_END_DATE
FROM 
HEALTH_DB.PUBLIC.ALL_TABLES;`});

snowflake.execute({sqlText:`
INSERT INTO HEALTH_DB.PUBLIC.SURVEY_DETAILS
SELECT
ROW_NUMBER() OVER (PARTITION BY QUESTION ORDER BY PROVIDER_ID) AS SURVEY_ID,
QUESTION,
ANSWER_DESCRIPTION,
PATIENT_SURVEY_STAR_RATING_FOOTNOTE
FROM 
HEALTH_DB.PUBLIC.ALL_TABLES;`});

snowflake.execute({sqlText:`
INSERT INTO HEALTH_DB.PUBLIC.FACT_TABLE
SELECT
ROW_NUMBER() OVER (PARTITION BY HOSPITAL_NAME ORDER BY PROVIDER_ID) AS HOSPITAL_ID,
ROW_NUMBER() OVER (PARTITION BY COUNTRY_NAME ORDER BY PROVIDER_ID) AS COUNTRY_ID,
ROW_NUMBER() OVER (PARTITION BY QUESTION ORDER BY PROVIDER_ID) AS SURVEY_ID,
MEASURE_ID, 
NUMBER_OF_COMPLETED_SURVEYS,
NUMBER_OF_COMPLETED_SURVEYS_FOOTNOTE,
CASE WHEN UPPER (SURVEY_RESPONSE_RATE_PERCENT)  IN ('NOT AVAILABLE', 'NOT APPLICABLE') THEN 0 ELSE SURVEY_RESPONSE_RATE_PERCENT END AS SURVEY_RESPONSE_RATE_PERCENT,
SURVEY_RESPONSE_RATE_PERCENT_FOOTNOTE,
CASE WHEN UPPER (LINEAR_MEAN_VALUE)  IN ('NOT AVAILABLE', 'NOT APPLICABLE') THEN 0 ELSE LINEAR_MEAN_VALUE END AS LINEAR_MEAN_VALUE,
ANSWER_PERCENT,
PATIENT_SURVEY_STAR_RATING
FROM 
HEALTH_DB.PUBLIC.ALL_TABLES;`});


//Create statement COMMIT, Commits an open transaction in the current session
snowflake.execute({sqlText:`COMMIT;`});

//Statement returned for info and debuging purposes
return "Store Procedure Executed Successfully";
}

catch (err)
{
    result = 'Error: ' + err;
    snowflake.execute({sqlText:`ROLLBACK;`});
    throw result;
}
$$;


CALL HEALTH_DB.PUBLIC.CUSTOMER_SP();

CREATE OR REPLACE TASK HEALTH_DB.PUBLIC.CUSTOMER_TASK
WAREHOUSE = COMPUTE_WH
SCHEDULE = '1 MINUTE'
AS CALL HEALTH_DB.PUBLIC.CUSTOMER_SP();

ALTER WAREHOUSE COMPUTE_WH SET WAREHOUSE_SIZE = X4LARGE;

ALTER TASK HEALTH_DB.PUBLIC.CUSTOMER_TASK RESUME;

SHOW TASKS;


SELECT C.COUNTRY_NAME, C.STATE, C.CITY, C.ZIPCODE, F.NUMBER_OF_COMPLETED_SURVEYS, 
F.SURVEY_RESPONSE_RATE_PERCENT, F.LINEAR_MEAN_VALUE, F.ANSWER_PERCENT, F.PATIENT_SURVEY_STAR_RATING FROM 
HEALTH_DB.PUBLIC.COUNTRY_DETAILS C
JOIN HEALTH_DB.PUBLIC.FACT_TABLE F
ON C.COUNTRY_ID = F.COUNTRY_ID;


SELECT C.STATE, AVG(F.SURVEY_RESPONSE_RATE_PERCENT), AVG(F.LINEAR_MEAN_VALUE)
FROM 
HEALTH_DB.PUBLIC.COUNTRY_DETAILS C
JOIN HEALTH_DB.PUBLIC.FACT_TABLE F
ON C.COUNTRY_ID = F.COUNTRY_ID
GROUP BY C.STATE;

SELECT * FROM SURVEY_DETAILS;

SELECT M.MEASURE_END_DATE, H.HOSPITAL_NAME, F.NUMBER_OF_COMPLETED_SURVEYS
FROM HEALTH_DB.PUBLIC.MEASURE_DETAILS M
JOIN HEALTH_DB.PUBLIC.FACT_TABLE F 
ON M.MEASURE_ID = F.MEASURE_ID
JOIN HEALTH_DB.PUBLIC.HOSPITAL_DETAILS H
ON H.HOSPITAL_ID =  F.HOSPITAL_ID;


